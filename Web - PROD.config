<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
  <section name="paypal" type="PayPal.Manager.SDKConfigHandler, PayPalCoreSDK" />
  <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
 
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <system.web>
    <machineKey validationKey="AutoGenerate,IsolateApps" decryptionKey="AutoGenerate,IsolateApps" validation="SHA1" />
    <compilation debug="true" targetFramework="4.6.1">
      <assemblies>
        <add assembly="System.AppContext, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.ComponentModel.Composition, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.6.1" maxRequestLength="8192" />
    <customErrors mode="Off" />
    <trust level="Full" />
    <pages>
      <namespaces>
        <add namespace="PayPal.PayPalAPIInterfaceService" />
        <add namespace="PayPal.PayPalAPIInterfaceService.Model" />
        <add namespace="Systema.Data" />
        <add namespace="log4net" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <clear />
        <add name="X-UA-Compatible" value="IE=EmulateIE7" />
      </customHeaders>
    </httpProtocol>
    <validation validateIntegratedModeConfiguration="false" />
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2072576000" />
      </requestFiltering>
    </security>
  </system.webServer>
  <appSettings>
    <add key="owin:AppStartup" value="false"></add>
    <add key="owin:AutomaticAppStartup" value="false" />
    
    <add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
    <add key="sizefile" value="8000000" />
    <!--<add key="usuariofel" value="DEMO320013FEL"/>
    <add key="cuentafel" value="DEMO320013FEL"/>
    <add key="passwordfel" value="mbXMCSd2&amp;"/>-->
    <add key="usuariofel" value="RSE160226PKA" />
    <add key="cuentafel" value="RSE160226PKA" />
    <add key="passwordfel" value="Facpoolin17#" />
    <add key="webpoolin" value="http://app.poolin.com.mx/" />
    <add key="files" value="http://app.poolin.com.mx/poolin_arch/" />

    <!--LLAVES DE PRUEBA CONEKTA-->
    <!--<add key="conekta_public" value="key_AngsuQR9sQez9bQj8k2qGqQ" />
    <add key="conekta_private" value="key_wzNurPs9JaqCajqENp9GXw" />-->
    
    <!--LLAVES DE PRODUCCION-->
    <add key="conekta_public" value="key_YHVQgwLpzusyyhseMREEw2w" />
    <add key="conekta_private" value="key_ve1VVnA7foAGquCHyWEzsA" />
    
    <add key="sendgridkey" value="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" />
  </appSettings>
  
   <!-- PayPal SDK settings -->
  <paypal>
    <settings>
      <!-- The Sandbox API endpoint -->
      <!--<add name="endpoint" value="https://api-3t.sandbox.paypal.com/nvp" />-->
      <!-- The Live API endpoint-->
      <add name="endpoint" value="https://api-3t.paypal.com/nvp" />
      <!-- Instant Payment Notification endpoint-->
      <add name="IPNEndpoint" value="https://www.paypal.com/cgi-bin/webscr" />
      <!--LocalTunnel Host Url-->
      <add name="IPNListenerUrl" value="https://paypalipntomato.pagekite.me/IPNListener.aspx" />
      <!--Timeout-->
      <add name="connectionTimeout" value="360000" />
      <!-- The number of times a request must be retried if the API endpoint is unresponsive -->
      <add name="requestRetries" value="3" />
      <!-- IP address-->
      <add name="IPAddress" value="127.0.0.1" />
      <!-- URL to which the buyer's browser is returned after choosing to pay with PayPal-->
      <add name="ReturnUrl" value="/getpagopaypal" />
      <!-- URL to which the buyer is returned if the buyer does not approve the use of PayPal to pay you-->
      <add name="CancelUrl" value="/user-dash?cancelado=True" />
      <!-- A URL to your logo image. Use a valid graphics format, such as .gif, .jpg, or .png-->
      <add name="LogoUrl" value="/img/logo.gif" />
      <!-- Merchant Email-->
      <!--<add name="SellerEmail" value="paypal@poolin.com.mx" />-->
      <add name="SellerEmail" value="paypal@poolin.com.mx" />
      <!-- In-Context Express Checkout URLs for Sandbox. The user must be redirected to in order to login and approve some payment actions. -->
      <!-- Sandbox URL-->
      <!--<add name="RedirectUrl" value="https://www.sandbox.paypal.com/checkoutnow?token=" />-->
      <!-- Live URL ESTE ES EL BUENO -->  
      <add name="RedirectUrl" value="https://www.paypal.com/checkoutnow?token=" />
      <!-- Express Checkout URLs for Sandbox. The user must be redirected to in order to login and approve some payment actions. -->
      <!-- Sandbox URL-->
       <!--<add name="RedirectUrl" value="https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout" />-->
      <!-- Live URL -->
      <!-- <add name="RedirectUrl" value="https://www.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token="/>-->
      <!-- BN code to track all transactions-->
      <!--<add name="SBN_CODE" value="PP-DemoPortal-EC-IC-csharp" />-->
      <add name="SBN_CODE" value="39L9TAKYQN5BG" />
    </settings>
    <accounts>
      <!-- Merchant username, password, signature -->
      <!-- Id. de cuenta de comercio 39L9TAKYQN5BG ESTA ES LA BUENA -->
      <account apiUsername="acalmacampos_api1.gmail.com" apiPassword="BNBYXPFFUERA4SXJ" applicationId="APP-65530884H4732404A" apiSignature="A--8MSCLabuvN8L.-MHjxC9uypBtA1z7uFbef5W8mz1p0dsb5THdtRvS" />
      <!-- Uncomment the below configuration if you want to use certificate file instead of API Signature-->
       <!--<account apiUsername="certuser_biz_api1.paypal.com" apiPassword="D6JNKKULHN3G5B8A" applicationId="APP-80W284485P519543T"
      apiCertificate="C:\PayPal_SDKs\sdk-core-dotnet\UnitTest\Resources\sdk-cert.p12" privateKeyPassword="password"/>-->
    </accounts>
  </paypal>
  <!-- log4net settings -->
  <log4net>
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="ExpressCheckout.log" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="FileAppender" />
    </root>
  </log4net> 
  
    
  <connectionStrings>
    <add name="SQLConn" connectionString="Server=184.168.194.75;Database=poolindb_go;Uid=poolinsa;Pwd=P00lin2017;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  
    <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Security.Cryptography.X509Certificates" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.2" newVersion="4.1.1.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Collections.Specialized" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.0" newVersion="4.0.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Security.Cryptography.Algorithms" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IO.FileSystem" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.0" newVersion="4.0.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Security.Cryptography.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="PayPalCoreSDK" publicKeyToken="5b4afc1ccaef40fb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.7.1.0" newVersion="1.7.1.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
         to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
     -->
  </runtime>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0" />
      <add name="Microsoft SQL Server Compact Data Provider 4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    </DbProviderFactories>
  </system.data>
  <system.codedom>
    <!--<compilers>
  <compiler language="c#;cs;csharp" extension=".cs"
  type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
  warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701"/>
  <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb"
  type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
  warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+"/>
  </compilers>-->
  </system.codedom>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
            <add endpoint="https://www.google.com/accounts/o8/ud" />
          </trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
               with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name.
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>